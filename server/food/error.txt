'use strict';

module.exports = {
  async up(queryInterface, Sequelize) {
    // 1. Food Favorite Items
    await queryInterface.createTable('foodfavoriteitems', {
      user_id: {
        type: Sequelize.INTEGER,
        allowNull: false
      },
      item_id: {
        type: Sequelize.INTEGER,
        allowNull: false
      }
    });

    // 2. Food Favorite Restaurants
    await queryInterface.createTable('foodfavoriteresturants', {
      user_id: {
        type: Sequelize.INTEGER,
        allowNull: false
      },
      rest_id: {
        type: Sequelize.INTEGER,
        allowNull: false
      }
    });

    // 3. Food Categories
    await queryInterface.createTable('foodcategories', {
      id: {
        type: Sequelize.INTEGER,
        autoIncrement: true,
        primaryKey: true
      },
      name: {
        type: Sequelize.STRING,
        allowNull: false
      },
      slug: Sequelize.STRING,
      description: Sequelize.STRING,
      img: Sequelize.STRING,
      created_by: Sequelize.INTEGER,
      parent_id: Sequelize.INTEGER,
      status: {
        type: Sequelize.BOOLEAN,
        defaultValue: true
      },
      created_at: {
        type: Sequelize.DATE,
        allowNull: false,
        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP')
      },
      updated_at: {
        type: Sequelize.DATE,
        allowNull: false,
        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP')
      }
    });

    // 4. Food Subcategories
    await queryInterface.createTable('foodsubcategories', {
      id: {
        type: Sequelize.INTEGER,
        autoIncrement: true,
        primaryKey: true
      },
      name: {
        type: Sequelize.STRING,
        allowNull: false
      },
      description: Sequelize.STRING,
      slug: Sequelize.STRING,
      img: Sequelize.STRING,
      category_id: {
        type: Sequelize.INTEGER,
        allowNull: false,
        references: {
          model: 'foodcategories',
          key: 'id'
        },
        onDelete: 'CASCADE'
      },
      commission: {
        type: Sequelize.FLOAT,
        defaultValue: 0.0
      },
      created_by: Sequelize.INTEGER,
      status: {
        type: Sequelize.BOOLEAN,
        defaultValue: true
      },
      created_at: {
        type: Sequelize.DATE,
        allowNull: false,
        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP')
      },
      updated_at: {
        type: Sequelize.DATE,
        allowNull: false,
        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP')
      }
    });

    // 5. Food Item Offers
    await queryInterface.createTable('fooditemoffers', {
      id: {
        type: Sequelize.INTEGER,
        autoIncrement: true,
        primaryKey: true
      },
      item_id: {
        type: Sequelize.INTEGER,
        allowNull: false,
        references: {
          model: 'fooditems',
          key: 'id'
        },
        onUpdate: 'CASCADE',
        onDelete: 'CASCADE'
      },
      min_quantity: {
        type: Sequelize.INTEGER,
        allowNull: false
      },
      offer_price: {
        type: Sequelize.FLOAT,
        allowNull: false
      },
      start_date: {
        type: Sequelize.DATE,
        allowNull: false
      },
      end_date: {
        type: Sequelize.DATE,
        allowNull: false
      },
      image: Sequelize.STRING,
      created_at: {
        type: Sequelize.DATE,
        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP')
      },
      updated_at: {
        type: Sequelize.DATE,
        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP')
      }
    });

    // 6. Order Items
    await queryInterface.createTable('order_items', {
      order_id: {
        type: Sequelize.INTEGER,
        allowNull: false,
        references: {
          model: 'foodorders',
          key: 'id'
        },
        onUpdate: 'CASCADE',
        onDelete: 'CASCADE'
      },
      item_id: {
        type: Sequelize.INTEGER,
        allowNull: false,
        references: {
          model: 'fooditems',
          key: 'id'
        },
        onUpdate: 'CASCADE',
        onDelete: 'CASCADE'
      },
      quantity: {
        type: Sequelize.INTEGER,
        allowNull: false,
        defaultValue: 1
      },
      price: {
        type: Sequelize.FLOAT,
        allowNull: false
      }
    });
  },

  async down(queryInterface, Sequelize) {
    await queryInterface.dropTable('order_items');
    await queryInterface.dropTable('fooditemoffers');
    await queryInterface.dropTable('foodsubcategories');
    await queryInterface.dropTable('foodcategories');
    await queryInterface.dropTable('foodfavoriteresturants');
    await queryInterface.dropTable('foodfavoriteitems');
  }
};
